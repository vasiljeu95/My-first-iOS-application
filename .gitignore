# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
 import UIKit
  class FirstViewController: UIViewController {

    @IBOutlet weak var massTextField: UITextField!
    @IBOutlet weak var speedTextField: UITextField!
    @IBOutlet weak var speedSegmentedControl: UISegmentedControl!
    
    @IBAction func speedSegmentedControl(_ sender: Any) {
        if speedSegmentedControl.selectedSegmentIndex == 0 {
            let mass = (massTextField.text! as NSString).floatValue
            let speedFPS = (speedTextField.text! as NSString).floatValue
            let joule = (((mass / 100000) * ((speedFPS / 3.280884) * (speedFPS / 3.280884))) / 2)
            let fpsINms = (speedFPS / 3.280884)
            let standartMassSpeedFPS = (sqrt((2 * joule) / (0.0002)) )
            
            let alertVC = UIAlertController(title: "Your calculate:", message: "Energy = " + String(format:"%.1f", joule) + " J " + ("\n") + "Speed = " + String(format:"%.1f", fpsINms) + " m/s" + ("\n") + "Speed at a mass of 0.2 gramm = " + String(format:"%.1f", standartMassSpeedFPS) + " fps", preferredStyle: .alert)
            let actionSave = UIAlertAction(title: "Save", style: .default) { (action) in
                UIPasteboard.general.string = "Energy = " + String(format:"%.1f", joule) + " J " + ("\n") + "Speed = " + String(format:"%.1f", fpsINms) + " m/s" + ("\n") + "Speed at a mass of 0.2 gramm = " + String(format:"%.1f", standartMassSpeedFPS) + " fps"
            }
            let actionCancel = UIAlertAction(title: "Cancel", style: .cancel) { (action) in
            }
            alertVC.addAction(actionSave)
            alertVC.addAction(actionCancel)
            self.present(alertVC, animated: true) {
                print("Allert is M/S")
            }
        }
        if speedSegmentedControl.selectedSegmentIndex == 1 {
            let mass = (massTextField.text! as NSString).floatValue
            let speedMS = (speedTextField.text! as NSString).floatValue
            let joule = (((mass / 100000) * (speedMS * speedMS)) / 2)
            let msINfps = (speedMS * 3.280884)
            let standartMassSpeedMS = ( sqrt((2 * joule) / (0.0002)) )
           
            let alertVC = UIAlertController(title: "Your calculate:", message: "Energy = " + String(format:"%.1f", joule) + " J " + ("\n") + "Speed = " + String(format:"%.1f", msINfps) + " fps " + ("\n") + "Speed at a mass of 0.2 gramm = " + String(format:"%.1f", standartMassSpeedMS) + " m/s", preferredStyle: .alert)
            let actionSave = UIAlertAction(title: "Save", style: .default) { (action) in
                UIPasteboard.general.string = "Energy = " + String(format:"%.1f", joule) + " J " + ("\n") + "Speed = " + String(format:"%.1f", msINfps) + " fps " + ("\n") + "Speed at a mass of 0.2 gramm = " + String(format:"%.1f", standartMassSpeedMS) + " m/s"
            }
            let actionCancel = UIAlertAction(title: "Cancel", style: .cancel) { (action) in
            }
            alertVC.addAction(actionSave)
            alertVC.addAction(actionCancel)
            self.present(alertVC, animated: true) {
                print("Allert is FPS")
            }
        }
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        self.view.endEditing(true)
    }
    
    func textFieldShouldReturn (_ textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        return true
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
    }
  }
